# !/usr/bin/env python
# -*- coding: utf-8 -*-
# 写在前面：
# 天地茫茫，宇宙无限，星际距离动辄以万亿公里计；然而若专注于微观世界，人类认知已进入了纳米范
# 围。如果使用定点数表示如此巨大的动态范围，势必耗费大量的存储资源，因此浮点数就应运而生了。
# 所谓浮点数，简单理解就是科学计数法。

#     浮点型数据既可以表示很大的数，也可以表示很小的数。精度是浮点型数据最重要的指标，也最
# 容易出问题。Python的浮点数为双精度浮点数，使用8字节、共64位表示一个浮点数，其中符号占1位，
# 指数占11位，尾数占52位。Python的浮点型数据精度很高，足以表示一般需求，如果对精度有要求，
# decimal模块可以提供更高的计算精度。decimal:小数的；

# a = 0.1 + 0.2
# print(a)
# 0.30000000000000004

# b = 0.1 + 0.2 == 0.3 # 判断浮点数是否相等，需要留心此类意外情况
# print(b)
# False

# 以上代码演示了因为精度问题导致浮点数计算出现的意外情况。不只Python如此，所有浮点数规范遵
# 从IEEE754二进制浮点数算数标准（ANSI/IEEE Std 754-1985）的编程语言，如C语言，都会如此。
# 如果想在C语言环境中验证，需要使用double类型。